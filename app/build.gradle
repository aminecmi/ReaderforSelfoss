buildscript {
}

ext {
    configuration = [
            buildDate: new Date()
    ]
    // This will make me able to build multiple times a day. May break thinks. I may forget it.
    todaysBuilds = "1"
}

def gitVersion() {
    def process = "git describe --abbrev=0 --tags".execute()
    return process.text.substring(1).replaceAll("\\.", "").trim()
}

def versionCodeFromGit() {
    println "version code " + gitVersion()
    return gitVersion().toInteger()
}

def versionNameFromGit() {
    println "version name " + gitVersion()
    return gitVersion()
}

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.1'
    defaultConfig {
        applicationId "apps.amine.bou.readerforselfoss"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode versionCodeFromGit()
        versionName versionNameFromGit()

        // Enabling multidex support.
        multiDexEnabled true
        lintOptions {
            abortOnError true
            disable 'InvalidPackage'
        }
        vectorDrawables.useSupportLibrary = true

        // tests
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
        debug {
            buildConfigField "String", "LOGIN_URL", appLoginUrl
            buildConfigField "String", "LOGIN_USERNAME", appLoginUsername
            buildConfigField "String", "LOGIN_PASSWORD", appLoginPassword
        }
    }
    flavorDimensions "build"
    productFlavors {
        githubConfig {
            versionNameSuffix '-github'
            dimension "build"
        }
        storeConfig {
            // As jenkins publishes to alpha first, this is the default suffix now.
            versionNameSuffix '-store'
            dimension "build"
        }
    }
}

dependencies {
    // Testing
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    // Espresso-contrib for DatePicker, RecyclerView, Drawer actions, Accessibility checks, CountingIdlingResource
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.1'
    // Espresso-intents for validation and stubbing of Intents
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Android Support
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    implementation 'com.android.support:customtabs:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    //multidex
    implementation 'com.android.support:multidex:1.0.3'

    // Intro
    implementation 'agency.tango.android:material-intro-screen:0.0.5'

    // About
    implementation('com.mikepenz:aboutlibraries:6.0.0@aar') {
        transitive = true
    }

    // Retrofit + http logging + okhttp
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.burgstaller:okhttp-digest:1.12'

    // Material-ish things
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.0.3'
    implementation 'com.github.jd-alexander:LikeButton:0.2.1'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    // glide
    implementation 'com.github.bumptech.glide:glide:4.1.1'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.1.1'

    // Asking politely users to rate the app
    implementation 'com.github.stkent:amplify:2.1.0'

    // Drawer
    implementation 'co.zsmb:materialdrawer-kt:1.3.5'
    implementation 'com.anupcowkur:reservoir:3.1.0'

    // Themes
    implementation 'com.52inc:scoops:1.0.0'
    implementation 'com.jrummyapps:colorpicker:2.1.7'
    implementation 'com.github.rubensousa:floatingtoolbar:1.5.1'

    // Pager
    implementation 'me.relex:circleindicator:1.2.2@aar'

    implementation 'androidx.core:core-ktx:0.3'

    // Crash
    implementation 'ch.acra:acra-http:5.1.3'
    implementation 'ch.acra:acra-dialog:5.1.3'
}


afterEvaluate {
    initAppLoginPropertiesIfNeeded()
}

def initAppLoginPropertiesIfNeeded() {
    def propertiesFile = file(System.getProperty("user.home") + '/.gradle/gradle.properties')
    if (!propertiesFile.exists()) {
        def commentMessage = "This is autogenerated local property from system environment to prevent key to be committed to source control."
        ant.propertyfile(file: System.getProperty("user.home") + "/.gradle/gradle.properties", comment: commentMessage) {
            entry(key: "appLoginUrl", value: System.getProperty("appLoginUrl"))
            entry(key: "appLoginUsername", value: System.getProperty("appLoginUsername"))
            entry(key: "appLoginPassword", value: System.getProperty("appLoginPassword"))
        }
    }
}